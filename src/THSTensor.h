#pragma once
#include "../Stdafx.h"
#include "TH/THTensor.h"
#include "torch/torch.h"
#include "Utils.h"
EXPORT_API(Tensor) THSTensor_arange(const Scalar start, const Scalar end, const Scalar step, const int8_t scalar_type, const char* device, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_zeros(const int64_t* size, const int size_length, const int8_t scalar_type, const char* device, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_ones(const int64_t* size, const int size_length, const int8_t scalar_type, const char* device, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_empty(const int64_t* size, const int size_length, const int8_t scalar_type, const char* device, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_new(void * data, void (*deleter)(void*), const int64_t* size, const int size_length, int8_t scalar_type, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_newLong(int64_t* data, void (*deleter)(void*), const int64_t* size, const int size_length, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_newSByteScalar(int8_t data, bool requires_grad);
EXPORT_API(Tensor) THSTensor_newByteScalar(char data, bool requires_grad);
EXPORT_API(Tensor) THSTensor_newBoolScalar(bool data, bool requires_grad);
EXPORT_API(Tensor) THSTensor_newHalfScalar(c10::Half data, bool requires_grad);
EXPORT_API(Tensor) THSTensor_newShortScalar(short data, bool requires_grad);
EXPORT_API(Tensor) THSTensor_newIntScalar(int data, bool requires_grad);
EXPORT_API(Tensor) THSTensor_newLongScalar(int64_t data, bool requires_grad);
EXPORT_API(Tensor) THSTensor_newDoubleScalar(double data, bool requires_grad);
EXPORT_API(Tensor) THSTensor_newFloatScalar(float data, bool requires_grad);
EXPORT_API(Tensor) THSTensor_rand(const int64_t* size, const int size_length, const int8_t scalar_type, const char* device, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_randint(const int64_t high, const int64_t* size, const int size_length, const int8_t scalar_type, const char* device, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_randn(const int64_t* size, const int size_length, const int8_t scalar_type, const char* device, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_sparse(Tensor indices, Tensor values, const int64_t* size, const int size_length, const int8_t scalar_type, const char* device, const bool requires_grad); 
EXPORT_API(int64_t) THSTensor_ndim(const Tensor self);
EXPORT_API(int64_t) THSTensor_size(const Tensor self, const int64_t dim);
EXPORT_API(int64_t) THSTensor_stride(const Tensor self, const int64_t dim);
EXPORT_API(int64_t*) THSTensor_stride(const Tensor self);
EXPORT_API(void) THSTensor_dispose(const Tensor self);
EXPORT_API(void *) THSTensor_data(const Tensor self);
EXPORT_API(Scalar) THSTensor_item(const Tensor self);
EXPORT_API(Tensor) THSTensor_get1(const Tensor self, int64_t index);
EXPORT_API(Tensor) THSTensor_get2(const Tensor self, int64_t index1, int64_t index2);
EXPORT_API(Tensor) THSTensor_get3(const Tensor self, int64_t index1, int64_t index2, int64_t index3);
EXPORT_API(Tensor) THSTensor_get4(const Tensor self, int64_t index1, int64_t index2, int64_t index3, int64_t index4);
EXPORT_API(Tensor) THSTensor_fill_(const Tensor self, const Tensor value);
EXPORT_API(Tensor) THSTensor_fillS_(const Tensor self, const Scalar value);
EXPORT_API(void) THSTensor_set1(const Tensor self, int64_t index, Scalar value);
EXPORT_API(void) THSTensor_set2(const Tensor self, int64_t index1, int64_t index2, Scalar value);
EXPORT_API(void) THSTensor_set3(const Tensor self, int64_t index1, int64_t index2, int64_t index3, Scalar value);
EXPORT_API(void) THSTensor_set4(const Tensor self, int64_t index1, int64_t index2, int64_t index3, int64_t index4, Scalar value);
EXPORT_API(int8_t) THSTensor_type(const Tensor self);
EXPORT_API(Tensor) THSTensor_to_type(const Tensor self, int8_t scalar_type);
EXPORT_API(const char*) THSTensor_deviceType(const Tensor self);
EXPORT_API(int) THSTensor_isSparse(const Tensor self);
EXPORT_API(int) THSTensor_requires_grad(const Tensor self);
EXPORT_API(Tensor) THSTensor_set_requires_grad(const Tensor self, const bool requires_grad);
EXPORT_API(Tensor) THSTensor_indices(const Tensor self);
EXPORT_API(Tensor) THSTensor_values(const Tensor self);
EXPORT_API(Tensor) THSTensor_cpu(const Tensor self);
EXPORT_API(Tensor) THSTensor_cuda(const Tensor self);
EXPORT_API(Tensor) THSTensor_grad(const Tensor self);
EXPORT_API(void) THSTensor_backward(const Tensor self);
EXPORT_API(Tensor) THSTensor_to_dense(Tensor self);
EXPORT_API(Tensor) THSTensor_cat(const Tensor* tensors_data, const int tensors_length, const int64_t dim);
EXPORT_API(Tensor) THSTensor_clone(const Tensor self);
EXPORT_API(Tensor) THSTensor_contiguous(const Tensor self);
EXPORT_API(Tensor) THSTensor_index_select(const Tensor self, const int64_t dim, const Tensor index);
EXPORT_API(Tensor) THSTensor_reshape(const Tensor self, const int64_t* shape, const int reshapelength);
EXPORT_API(Tensor) THSTensor_squeeze(const Tensor self, const int64_t dim);
EXPORT_API(Tensor) THSTensor_stack(const Tensor* tensors_data, const int tensors_length, const int64_t dim);
EXPORT_API(Tensor) THSTensor_t(const Tensor self);
EXPORT_API(Tensor) THSTensor_transpose(const Tensor self, const int64_t dim0, const int64_t dim1);
EXPORT_API(Tensor) THSTensor_transpose_(const Tensor self, const int64_t dim0, const int64_t dim1);
EXPORT_API(Tensor) THSTensor_view(const Tensor self, const int64_t* size, const int size_length);
EXPORT_API(Tensor) THSTensor_add(const Tensor self, const Tensor other, const Scalar alpha);
EXPORT_API(Tensor) THSTensor_add_(const Tensor self, const Tensor other, const Scalar alpha);
EXPORT_API(Tensor) THSTensor_addS(const Tensor self, const Scalar other, const Scalar alpha);
EXPORT_API(Tensor) THSTensor_addS_(const Tensor self, const Scalar other, const Scalar alpha);
EXPORT_API(Tensor) THSTensor_addbmm(const Tensor self, const Tensor batch1, const Tensor batch2, const Scalar beta, const Scalar alpha);
EXPORT_API(Tensor) THSTensor_addmm(const Tensor self, const Tensor mat1, const Tensor mat2, const Scalar beta, const Scalar alpha);
EXPORT_API(Tensor) THSTensor_argmax(const Tensor self);
EXPORT_API(Tensor) THSTensor_argmaxT(const Tensor self, const int64_t dim, bool keepDim);
EXPORT_API(Tensor) THSTensor_argmin(const Tensor self);
EXPORT_API(Tensor) THSTensor_argminT(const Tensor self, const int64_t dim, bool keepDim);
EXPORT_API(Tensor) THSTensor_relu(const Tensor self);
EXPORT_API(Tensor) THSTensor_sin(const Tensor self);
EXPORT_API(Tensor) THSTensor_cos(const Tensor self);
EXPORT_API(Tensor) THSTensor_tan(const Tensor self);
EXPORT_API(Tensor) THSTensor_asin(const Tensor self);
EXPORT_API(Tensor) THSTensor_acos(const Tensor self);
EXPORT_API(Tensor) THSTensor_atan(const Tensor self);
EXPORT_API(Tensor) THSTensor_sinh(const Tensor self);
EXPORT_API(Tensor) THSTensor_cosh(const Tensor self);
EXPORT_API(Tensor) THSTensor_tanh(const Tensor self);
EXPORT_API(Tensor) THSTensor_floor(const Tensor self);
EXPORT_API(Tensor) THSTensor_ceil(const Tensor self);
EXPORT_API(Tensor) THSTensor_round(const Tensor self);
EXPORT_API(Tensor) THSTensor_abs(const Tensor self);
EXPORT_API(Tensor) THSTensor_neg(const Tensor self);
EXPORT_API(Tensor) THSTensor_sqrt(const Tensor self);
EXPORT_API(Tensor) THSTensor_sign(const Tensor self);
EXPORT_API(Tensor) THSTensor_softplus(const Tensor self);
EXPORT_API(Tensor) THSTensor_relu_(const Tensor self);
EXPORT_API(Tensor) THSTensor_sin_(const Tensor self);
EXPORT_API(Tensor) THSTensor_cos_(const Tensor self);
EXPORT_API(Tensor) THSTensor_tan_(const Tensor self);
EXPORT_API(Tensor) THSTensor_asin_(const Tensor self);
EXPORT_API(Tensor) THSTensor_acos_(const Tensor self);
EXPORT_API(Tensor) THSTensor_atan_(const Tensor self);
EXPORT_API(Tensor) THSTensor_sinh_(const Tensor self);
EXPORT_API(Tensor) THSTensor_cosh_(const Tensor self);
EXPORT_API(Tensor) THSTensor_tanh_(const Tensor self);
EXPORT_API(Tensor) THSTensor_floor_(const Tensor self);
EXPORT_API(Tensor) THSTensor_ceil_(const Tensor self);
EXPORT_API(Tensor) THSTensor_round_(const Tensor self);
EXPORT_API(Tensor) THSTensor_abs_(const Tensor self);
EXPORT_API(Tensor) THSTensor_neg_(const Tensor self);
EXPORT_API(Tensor) THSTensor_sqrt_(const Tensor self);
EXPORT_API(Tensor) THSTensor_sign_(const Tensor self);
EXPORT_API(Tensor) THSTensor_baddbmm(const Tensor self, const Tensor batch1, const Tensor batch2, const Scalar beta, const Scalar alpha);
EXPORT_API(Tensor) THSTensor_bmm(const Tensor self, const Tensor mat2);
EXPORT_API(Tensor) THSTensor_clamp(const Tensor self, const Scalar min, const Scalar max);
EXPORT_API(Tensor) THSTensor_div(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_div_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_divS(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_divS_(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_divS2(const Scalar self, const Tensor other);
EXPORT_API(Tensor) THSTensor_eq(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_eq_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_eqS(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_eqS_(const Tensor self, const Scalar other);
EXPORT_API(int) THSTensor_equal(const Tensor self, const Tensor other);
EXPORT_API(int) THSTensor_allclose(const Tensor self, const Tensor other, double rtol, double atol, bool equal_nan);
EXPORT_API(Tensor) THSTensor_exp(const Tensor self);
EXPORT_API(Tensor) THSTensor_erf(const Tensor self);
EXPORT_API(Tensor) THSTensor_erf_(const Tensor self);
EXPORT_API(Tensor) THSTensor_ge(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_ge_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_geS(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_geS_(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_gt(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_gt_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_gtS(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_gtS_(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_le(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_le_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_leS(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_leS_(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_log(const Tensor self);
EXPORT_API(Tensor) THSTensor_log_(const Tensor self);
EXPORT_API(Tensor) THSTensor_log2(const Tensor self);
EXPORT_API(Tensor) THSTensor_log2_(const Tensor self);
EXPORT_API(Tensor) THSTensor_log10(const Tensor self);
EXPORT_API(Tensor) THSTensor_log10_(const Tensor self);
EXPORT_API(Tensor) THSTensor_lt(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_lt_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_ltS(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_ltS_(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_matmul(const Tensor self, const Tensor other);
EXPORT_API(void) THSTensor_topk(const Tensor self, Tensor* (*allocator)(size_t length), const int64_t k, const int64_t dim, const bool largest, const bool sorted);
EXPORT_API(void) THSTensor_max(const Tensor self, Tensor* (*allocator)(size_t length), const int64_t dim, const bool keepdim);
EXPORT_API(Tensor) THSTensor_mean(const Tensor self);
EXPORT_API(Tensor) THSTensor_mm(const Tensor self, const Tensor mat2);
EXPORT_API(Tensor) THSTensor_mul(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_mul_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_mulS(const Tensor self, const Scalar scalar);
EXPORT_API(Tensor) THSTensor_mulS_(const Tensor self, const Scalar scalar);
EXPORT_API(Tensor) THSTensor_ne(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_ne_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_neS(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_neS_(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_norm(const Tensor self, const int64_t dim, const bool keepdim);
EXPORT_API(Tensor) THSTensor_pow(const Tensor self, const Tensor exponent);
EXPORT_API(Tensor) THSTensor_pow_(const Tensor self, const Tensor exponent);
EXPORT_API(Tensor) THSTensor_powS(const Tensor self, const Scalar scalar);
EXPORT_API(Tensor) THSTensor_powS_(const Tensor self, const Scalar scalar);
EXPORT_API(Tensor) THSTensor_remainder(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_remainder_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_remainderS(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_remainderS_(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_remainderS2(const Scalar self, const Tensor other);
EXPORT_API(Tensor) THSTensor_sigmoid(const Tensor self);
EXPORT_API(Tensor) THSTensor_sub(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_sub_(const Tensor self, const Tensor other);
EXPORT_API(Tensor) THSTensor_subS(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_subS_(const Tensor self, const Scalar other);
EXPORT_API(Tensor) THSTensor_subS2(const Scalar self, const Tensor other);
EXPORT_API(Tensor) THSTensor_sum(const Tensor self, bool has_type, const int8_t dtype);
EXPORT_API(Tensor) THSTensor_sum1(const Tensor self, const int64_t* dims, int length, bool keepdim, bool has_type, const int8_t dtype);
EXPORT_API(Tensor) THSTensor_unsqueeze(const Tensor self, const int64_t dim);
EXPORT_API(Tensor) THSTensor_expand(const Tensor self, const int64_t* size, const int size_length, bool implicit);
EXPORT_API(Tensor) THSTensor_flip(const Tensor self, const int64_t* dims, const int dims_length);
EXPORT_API(Tensor) THSTensor_narrow(const Tensor self, const int64_t dim, const int64_t start, const int64_t length);
EXPORT_API(Tensor) THSTensor_slice(const Tensor self, const int64_t dim, const int64_t start, const int64_t end, const int64_t step);
EXPORT_API(void) THSTensor_unbind(const Tensor self, Tensor* (*allocator)(size_t length), const int64_t dim);
EXPORT_API(void) THSTensor_split_with_sizes(const Tensor self, Tensor* (*allocator)(size_t length), const int64_t* split_sizes, const int split_sizes_length, const int64_t dim);
EXPORT_API(Tensor) THSTensor_conv1d(const Tensor input, const Tensor weight, const Tensor bias, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* dilation, const int dilation_length, const int64_t groups);
EXPORT_API(Tensor) THSTensor_conv2d(const Tensor input, const Tensor weight, const Tensor bias, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* dilation, const int dilation_length, const int64_t groups);
EXPORT_API(Tensor) THSTensor_conv3d(const Tensor input, const Tensor weight, const Tensor bias, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* dilation, const int dilation_length, const int64_t groups);
EXPORT_API(Tensor) THSTensor_conv_transpose1d(const Tensor input, const Tensor weight, const Tensor bias, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* output_padding, const int output_padding_length, const int64_t groups, const int64_t* dilation, const int dilation_length);
EXPORT_API(Tensor) THSTensor_conv_transpose2d(const Tensor input, const Tensor weight, const Tensor bias, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* output_padding, const int output_padding_length, const int64_t groups, const int64_t* dilation, const int dilation_length);
EXPORT_API(Tensor) THSTensor_conv_transpose3d(const Tensor input, const Tensor weight, const Tensor bias, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* output_padding, const int output_padding_length, const int64_t groups, const int64_t* dilation, const int dilation_length);
EXPORT_API(Tensor) THSTensor_max_pool1d(const Tensor self, const int64_t* kernel_size, const int kernel_size_length, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* dilation, const int dilation_length, const bool ceil_mode);
EXPORT_API(Tensor) THSTensor_max_pool2d(const Tensor self, const int64_t* kernel_size, const int kernel_size_length, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* dilation, const int dilation_length, const bool ceil_mode);
EXPORT_API(Tensor) THSTensor_max_pool3d(const Tensor self, const int64_t* kernel_size, const int kernel_size_length, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* dilation, const int dilation_length, const bool ceil_mode);
EXPORT_API(void) THSTensor_max_pool1d_with_indices(const Tensor self, Tensor* (*allocator)(size_t length), const int64_t* kernel_size, const int kernel_size_length, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* dilation, const int dilation_length, const bool ceil_mode);
EXPORT_API(void) THSTensor_max_pool2d_with_indices(const Tensor self, Tensor* (*allocator)(size_t length), const int64_t* kernel_size, const int kernel_size_length, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* dilation, const int dilation_length, const bool ceil_mode);
EXPORT_API(void) THSTensor_max_pool3d_with_indices(const Tensor self, Tensor* (*allocator)(size_t length), const int64_t* kernel_size, const int kernel_size_length, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length, const int64_t* dilation, const int dilation_length, const bool ceil_mode);
EXPORT_API(Tensor) THSTensor_max_unpool2d(const Tensor self, const Tensor indices, const int64_t* sizes, const int sizes_length);
EXPORT_API(Tensor) THSTensor_max_unpool3d(const Tensor self, const Tensor indices, const int64_t* sizes, const int sizes_length, const int64_t* stride, const int stride_length, const int64_t* padding, const int padding_length);
EXPORT_API(Tensor) THSTensor_gather(const Tensor self, const int64_t dim, const Tensor index);
EXPORT_API(Tensor) THSTensor_scatter(const Tensor self, const int64_t dim, const Tensor index, const Tensor src);
